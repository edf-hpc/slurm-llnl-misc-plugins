#!/usr/bin/env python
# -*- coding: utf-8 -*-
##############################################################################
#  Copyright (C) 2014 EDF SA                                                 #
#                                                                            #
#  Author: RÃ©mi Palancher <remi-externe.palancher@edf.fr>                    #
#                                                                            #
#  This file is part of slurm-llnl-misc-plugins.                             #
#                                                                            #
#  This software is governed by the CeCILL-C license under French law and    #
#  abiding by the rules of distribution of free software. You can use,       #
#  modify and/ or redistribute the software under the terms of the CeCILL-C  #
#  license as circulated by CEA, CNRS and INRIA at the following URL         #
#  "http://www.cecill.info".                                                 #
#                                                                            #
#  As a counterpart to the access to the source code and rights to copy,     #
#  modify and redistribute granted by the license, users are provided only   #
#  with a limited warranty and the software's author, the holder of the      #
#  economic rights, and the successive licensors have only limited           #
#  liability.                                                                #
#                                                                            #
#  In this respect, the user's attention is drawn to the risks associated    #
#  with loading, using, modifying and/or developing or reproducing the       #
#  software by the user in light of its specific status of free software,    #
#  that may mean that it is complicated to manipulate, and that also         #
#  therefore means that it is reserved for developers and experienced        #
#  professionals having in-depth computer knowledge. Users are therefore     #
#  encouraged to load and test the software's suitability as regards their   #
#  requirements in conditions enabling the security of their systems and/or  #
#  data to be ensured and, more generally, to use and operate it in the      #
#  same conditions as regards security.                                      #
#                                                                            #
#  The fact that you are presently reading this means that you have had      #
#  knowledge of the CeCILL-C license and that you accept its terms.          #
#                                                                            #
##############################################################################

""" This script generates /etc/slurm-llnl/qos.conf configuration file used
    by Lua job submit plugin. The content of the file is based on the QOS
    in place in SlurmDBD database and the output of sacctmgr command. """

import subprocess
import sys
import csv

# list of QOS to ignore for file
excluded_qos = [ 'dsp-ap-hpcstats' ]
# list of accounts to ignore
excluded_accounts = [ 'root' ]

def read_csv_cmd(cmd, fieldnames):
    output = None
    try:
        output = subprocess.Popen(cmd, stdout=subprocess.PIPE).communicate()[0]
    except subprocess.CalledProcessError, e:
        print("error while executing cmd: %s: %s" % (','.join(cmd), str(e)))
        sys.exit(1)

    output_lines = output.split('\n')
    output_lines.pop() # remove last empty line

    return csv.DictReader(output_lines, fieldnames=fieldnames, delimiter='|')

def get_qos_accounts():
    """For a dict with all QOS except 'normal' as keys and the list of allowed
       accounts as values."""
    cmd = [ 'sacctmgr', '--noheader', '--parsable', 'show', 'associations', 'format="account,qos"' ]

    fieldnames = ['account', 'qos']
    reader = read_csv_cmd(cmd, fieldnames)

    result = {}

    for row in reader:
        account = row['account']
        if account in excluded_accounts:
            continue  # jump to next line
        qos_list = row['qos'].split(',')
        for qos in qos_list:
            if qos not in result:
                result[qos] = [ account ]
            elif account not in result[qos]:
                result[qos].append(account)

    return result

QOS_CONF = "/etc/slurm-llnl/qos.conf"

qos_accounts = get_qos_accounts()

# run sacctmgr to get the list of qos
cmd = [ 'sacctmgr', '--noheader', '--parsable', 'show', 'qos', 'format="Name,MaxWall,MaxCPUs"' ]
fieldnames = ['name', 'walltime', 'max_cpus']
qos_reader = read_csv_cmd(cmd, fieldnames)

# list of all lines to write in conf file
qos_conf = []

for qos_row in qos_reader:

    qos_conf_l = None
    if len(qos_row) < 2:
        print('not enough columns in row: %d' % (len(qos_conf)))
    else:

        name = qos_row['name']
        wall = qos_row['walltime']
        cpu = qos_row['max_cpus']

        if name == '' or (wall == '' and cpu == ''):
            print('skipping qos %s since MaxWall and MaxCPUs are missing' \
                  % (name))
            continue
        if name in excluded_qos:
            print('skipping qos %s because listed as excluded' \
                  % (name))
            continue

        accounts = ''
        if name in qos_accounts:
            accounts = ','.join(qos_accounts[name])
        qos_conf_l = "{name}|{wall}|{cpu}|{accounts}\n" \
                           .format(name=name,
                                   wall=wall,
                                   cpu=cpu,
                                   accounts=accounts)

    if qos_conf_l: qos_conf.append(qos_conf_l)

if len(qos_conf):
    with open(QOS_CONF, 'w') as qosfile:
        qosfile.writelines(sorted(qos_conf, reverse=True))
else:
    # no valid qos line found in output of sacctmgr cmd
    print("qos conf is empty, did not write %s" % (QOS_CONF))
